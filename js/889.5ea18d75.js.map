{"version":3,"file":"js/889.5ea18d75.js","mappings":"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","sources":["webpack://shoping-cart/./src/stores/index.js","webpack://shoping-cart/./src/views/SignUp.vue","webpack://shoping-cart/./src/views/SignUp.vue?9d2a"],"sourcesContent":["import { defineStore } from 'pinia'\r\nimport { getAuth, signInWithEmailAndPassword, sendPasswordResetEmail, signOut } from \"firebase/auth\";\r\nimport Toast from '@/main'\r\nconst user = JSON.parse(localStorage.getItem('Userdata'))\r\ngetAuth().languageCode = 'en';\r\n\r\nexport const useAuthStore = defineStore('Auth', {\r\n    state: () => {\r\n        return {\r\n            user: user,\r\n            error: null\r\n        }\r\n    },\r\n    getters: {\r\n        isAuthenticated: (state) => !!state.user\r\n    },\r\n    actions: {\r\n        async signIn(email, password) {\r\n            try {\r\n                const { user } = await signInWithEmailAndPassword(getAuth(), email, password)\r\n                this.user = user\r\n                localStorage.setItem(\"Userdata\", JSON.stringify(user))\r\n                Toast.fire({\r\n                    icon: \"success\",\r\n                    title: this.user.displayName + \", Signed in successfully\",\r\n                });\r\n            } catch (error) {\r\n                this.error = error.code\r\n                Toast.fire({\r\n                    icon: \"error\",\r\n                    title: this.error,\r\n                });\r\n            }\r\n        },\r\n        async logout() {\r\n            try {\r\n                this.user = null\r\n                localStorage.clear();\r\n                await signOut(getAuth())\r\n            } catch (error) {\r\n                this.error = error.message\r\n            }\r\n        },\r\n        async resetPassword(email) {\r\n            try {\r\n                await sendPasswordResetEmail(getAuth(), email)\r\n                Toast.fire({\r\n                    icon: \"info\",\r\n                    title: \"please check your email.\",\r\n                });\r\n            } catch (error) {\r\n                this.error = error.code;\r\n                Toast.fire({\r\n                    icon: \"error\",\r\n                    title: this.error,\r\n                });\r\n            }\r\n        },\r\n        Registration() {\r\n\r\n        }\r\n    }\r\n})","<template>\r\n    <section id=\"signup\">\r\n        <div class=\"container\">\r\n            <router-link to=\"/\" aria-current=\"page\">\r\n                <img src=\"../assets/img/logo3.png\" alt=\"logo1\">\r\n            </router-link>\r\n            <h1>Sign Up</h1>\r\n            <h3 class=\"input-errors mb-3 text-center\">{{ errorCode }}</h3>\r\n            <label for=\"username\">User Name</label>\r\n            <input type=\"text\" v-model=\"v$.username.$model\" id=\"username\" placeholder=\"User Name\">\r\n            <div class=\"input-errors\" v-for=\"(error, index) of v$.username.$errors\" :key=\"index\">\r\n                <div class=\"error-msg\">{{ error.$message }}</div>\r\n            </div>\r\n\r\n            <label for=\"email\">E-Mail</label>\r\n            <input type=\"email\" v-model=\"v$.email.$model\" id=\"email\" placeholder=\"Email Address\">\r\n            <div class=\"input-errors\" v-for=\"(error, index) of v$.email.$errors\" :key=\"index\">\r\n                <div class=\"error-msg\">{{ error.$message }}</div>\r\n            </div>\r\n\r\n            <label for=\"password\">Password</label>\r\n            <input type=\"text\" v-model=\"v$.password.$model\" id=\"password\" placeholder=\"Password\">\r\n            <div class=\"input-errors\" v-for=\"(error, index) of v$.password.$errors\" :key=\"index\">\r\n                <div class=\"error-msg\">{{ error.$message }}</div>\r\n            </div>\r\n\r\n            <button @click=\"submitForm\" type=\"button\">Sign Up</button>\r\n\r\n            <div class=\"row w-100 px-md-3\">\r\n                <div class=\"col-md-6 ps-md-0\">\r\n                    <button @click=\"GoogleSignUp\" class=\"loginBtn loginBtn--google\">\r\n                        Login with Google\r\n                    </button>\r\n                </div>\r\n                <div class=\"col-md-6 px-md-0\">\r\n                    <button @click=\"FacebookSignUp\" class=\"loginBtn loginBtn--facebook\">\r\n                        Login with Facebook\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <router-link to=\"/login\" class=\"link\">\r\n                <h4>Login</h4>\r\n            </router-link>\r\n        </div>\r\n    </section>\r\n</template>\r\n  \r\n<script>\r\nimport Toast from '@/main';\r\nimport { useVuelidate } from '@vuelidate/core'\r\nimport { required, email, minLength, maxLength, helpers } from '@vuelidate/validators'\r\nconst pass = helpers.regex(/^(?=.*\\d)(?=.*[!@#$%^&*])(?=.*[a-z])(?=.*[A-Z]).{8,20}$/)\r\nimport { useAuthStore } from '@/stores/index';\r\nimport { mapState } from 'pinia';\r\n\r\nimport { getAuth, createUserWithEmailAndPassword, updateProfile, signInWithPopup, GoogleAuthProvider } from \"firebase/auth\";\r\n\r\nexport default {\r\n    name: 'signup',\r\n    setup: () => ({ v$: useVuelidate() }),\r\n    data() {\r\n        return {\r\n            username: '',\r\n            email: '',\r\n            password: '',\r\n            errorCode: '',\r\n            auth: getAuth(),\r\n            provider: ''\r\n        }\r\n    },\r\n    validations() {\r\n        return {\r\n            username: {\r\n                required: helpers.withMessage('* Please type Your User Name.', required),\r\n                minLength: minLength(3),\r\n                maxLength: maxLength(20)\r\n            },\r\n            email: {\r\n                required: helpers.withMessage('* Please type Your Email Address.', required),\r\n                email\r\n            },\r\n            password: {\r\n                required: helpers.withMessage('* Please type Your Password.', required),\r\n                pass: helpers.withMessage('* Must contain at least one number and one uppercase and lowercase letter required.', pass)\r\n            }\r\n        }\r\n    },\r\n    computed: {\r\n        ...mapState(useAuthStore, ['isAuthenticated'])\r\n    },\r\n    methods: {\r\n        async submitForm() {\r\n            const isFormCorrect = await this.v$.$validate()\r\n\r\n            if (isFormCorrect == true) {\r\n                await createUserWithEmailAndPassword(this.auth, this.email, this.password)\r\n                    .then((userCredential) => {\r\n                        // Signed in \r\n                        const user = userCredential.user;\r\n                        updateProfile(this.auth.currentUser, { displayName: this.username }).then(() => {\r\n                            console.log(user.providerData[0], 'signup');\r\n                            localStorage.setItem(\"Userdata\", JSON.stringify(user.providerData[0]))\r\n                            Toast.fire({\r\n                                icon: \"success\",\r\n                                title: \"Signed in successfully\",\r\n                            });\r\n                            this.$router.push({ path: '/' })\r\n                        }).catch(\r\n                            (err) => console.log(err)\r\n                        );\r\n                    })\r\n                    .catch((error) => {\r\n                        this.errorCode = error.code;\r\n                    });\r\n            }\r\n        },\r\n        GoogleSignUp() {\r\n            signInWithPopup(this.auth, this.provider)\r\n                .then((result) => {\r\n                    // This gives you a Google Access Token. You can use it to access the Google API.\r\n                    GoogleAuthProvider.credentialFromResult(result);\r\n                    const user = result.user;\r\n                    console.log(user.providerData[0], 'signup with google');\r\n                    localStorage.setItem(\"Userdata\", JSON.stringify(user.providerData[0]))\r\n                    Toast.fire({\r\n                        icon: \"success\",\r\n                        title: user.providerData[0].displayName + \", Sign in successfully\",\r\n                    });\r\n                    this.$router.push({ path: '/' })\r\n                }).catch((error) => {\r\n                    console.log(error, 'error');\r\n                });\r\n        },\r\n        FacebookSignUp() {\r\n            // signInWithPopup(auth, provider)\r\n            //     .then((result) => {\r\n            //         // The signed-in user info.\r\n            //         const user = result.user;\r\n            //         // This gives you a Facebook Access Token. You can use it to access the Facebook API.\r\n            //         const credential = FacebookAuthProvider.credentialFromResult(result);\r\n            //         const accessToken = credential.accessToken;\r\n\r\n            //         // IdP data available using getAdditionalUserInfo(result)\r\n            //         // ...\r\n            //     })\r\n            //     .catch((error) => {\r\n            //         // Handle Errors here.\r\n            //         const errorCode = error.code;\r\n            //         const errorMessage = error.message;\r\n            //         // The email of the user's account used.\r\n            //         const email = error.customData.email;\r\n            //         // The AuthCredential type that was used.\r\n            //         const credential = FacebookAuthProvider.credentialFromError(error);\r\n\r\n            //         // ...\r\n            //     });\r\n        }\r\n    },\r\n    mounted() {\r\n        if (useAuthStore().isAuthenticated) {\r\n            this.$router.push({ path: '/' })\r\n        }\r\n        this.provider = new GoogleAuthProvider();\r\n    }\r\n}\r\n</script>\r\n\r\n","import { render } from \"./SignUp.vue?vue&type=template&id=32eb83e0\"\nimport script from \"./SignUp.vue?vue&type=script&lang=js\"\nexport * from \"./SignUp.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\Surat infotech\\\\OneDrive\\\\Desktop\\\\yash\\\\Shoping-Cart-Vuejs\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["user","JSON","parse","localStorage","getItem","getAuth","languageCode","useAuthStore","defineStore","state","error","getters","isAuthenticated","actions","async","email","password","signInWithEmailAndPassword","this","setItem","stringify","Toast","icon","title","displayName","code","clear","signOut","message","sendPasswordResetEmail","Registration","id","class","_createElementVNode","src","_imports_0","alt","for","_createElementBlock","_hoisted_1","_hoisted_2","_createVNode","_component_router_link","to","_hoisted_3","_hoisted_4","_hoisted_5","$data","_hoisted_6","type","_ctx","username","$model","placeholder","_Fragment","$errors","index","key","_hoisted_7","$message","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","onClick","$options","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","pass","helpers","name","setup","v$","useVuelidate","data","errorCode","auth","provider","validations","required","minLength","maxLength","computed","mapState","methods","isFormCorrect","$validate","createUserWithEmailAndPassword","then","userCredential","updateProfile","currentUser","console","log","providerData","$router","push","path","catch","err","GoogleSignUp","signInWithPopup","result","GoogleAuthProvider","FacebookSignUp","mounted","__exports__","render"],"sourceRoot":""}