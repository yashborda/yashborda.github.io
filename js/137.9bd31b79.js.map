{"version":3,"file":"js/137.9bd31b79.js","mappings":"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","sources":["webpack://shoping-cart/./src/stores/index.js","webpack://shoping-cart/./src/views/Login.vue","webpack://shoping-cart/./src/views/Login.vue?240b"],"sourcesContent":["import { defineStore } from 'pinia'\r\nimport { getAuth, signInWithEmailAndPassword, sendPasswordResetEmail, createUserWithEmailAndPassword, updateProfile, signOut } from \"firebase/auth\";\r\nimport Toast from '@/main'\r\nconst user = JSON.parse(localStorage.getItem('Userdata'))\r\ngetAuth().languageCode = 'en';\r\n\r\nexport const useAuthStore = defineStore('Auth', {\r\n    state: () => {\r\n        return {\r\n            user: user,\r\n            error: null,\r\n            isAuth: false\r\n        }\r\n    },\r\n    getters: {\r\n        isAuthenticated: (state) => !!state.user\r\n    },\r\n    actions: {\r\n        async signIn(email, password) {\r\n            try {\r\n                const { user } = await signInWithEmailAndPassword(getAuth(), email, password)\r\n                this.user = user\r\n                localStorage.setItem(\"Userdata\", JSON.stringify(user))\r\n                localStorage.setItem(\"isAuth\", JSON.stringify(true))\r\n                this.isAuth = true\r\n                Toast.fire({\r\n                    icon: \"success\",\r\n                    title: this.user.displayName + \", Signed in successfully\",\r\n                });\r\n            } catch (error) {\r\n                this.error = error.code\r\n                Toast.fire({\r\n                    icon: \"error\",\r\n                    title: this.error,\r\n                });\r\n            }\r\n        },\r\n        async resetPassword(email) {\r\n            try {\r\n                await sendPasswordResetEmail(getAuth(), email)\r\n                Toast.fire({\r\n                    icon: \"info\",\r\n                    title: \"please check your email.\",\r\n                });\r\n            } catch (error) {\r\n                this.error = error.code;\r\n                Toast.fire({\r\n                    icon: \"error\",\r\n                    title: this.error,\r\n                });\r\n            }\r\n        },\r\n        async logout() {\r\n            try {\r\n                this.user = null\r\n                this.isAuth = false\r\n                this.error = null,\r\n                this.isAuthenticated = false\r\n                localStorage.clear();\r\n                await signOut(getAuth())\r\n            } catch (error) {\r\n                this.error = error.message\r\n            }\r\n        },\r\n        async Registration(username, email, password) {\r\n            try {\r\n                await createUserWithEmailAndPassword(getAuth(), email, password)\r\n                    .then((userCredential) => {\r\n                        // Signed in \r\n                        const CredentialUser = userCredential.user;\r\n                        updateProfile(getAuth().currentUser, { displayName: username })\r\n                            .then(() => {\r\n                                this.user = CredentialUser.providerData[0]\r\n                                localStorage.setItem(\"isAuth\", JSON.stringify(true))\r\n                                this.isAuth = true\r\n                                localStorage.setItem(\"Userdata\", JSON.stringify(CredentialUser))\r\n                                Toast.fire({\r\n                                    icon: \"success\",\r\n                                    title: username + \"Signed Up successfully\",\r\n                                });\r\n                            });\r\n                    })\r\n            } catch (error) {\r\n                this.error = error.code;\r\n                Toast.fire({\r\n                    icon: \"error\",\r\n                    title: this.error,\r\n                });\r\n            }\r\n        },\r\n        // LoginWithGoogle() {\r\n\r\n        // }\r\n    }\r\n})","<template>\r\n    <section id=\"login\">\r\n        <div class=\"container\">\r\n            <router-link to=\"/\" aria-current=\"page\">\r\n                <img src=\"../assets/img/logo3.png\" alt=\"logo\">\r\n            </router-link>\r\n            <h1>Login</h1>\r\n            <label for=\"email\">E-Mail</label>\r\n            <input type=\"email\" v-model=\"v$.email.$model\" id=\"email\" placeholder=\"Email Address\">\r\n            <div class=\"input-errors\" v-for=\"(error, index) of v$.email.$errors\" :key=\"index\">\r\n                <div class=\"error-msg\">{{ error.$message }}</div>\r\n            </div>\r\n\r\n            <label for=\"password\">Password</label>\r\n            <input type=\"text\" v-model=\"v$.password.$model\" id=\"password\" placeholder=\"Password\">\r\n            <div class=\"input-errors\" v-for=\"(error, index) of v$.password.$errors\" :key=\"index\">\r\n                <div class=\"error-msg\">{{ error.$message }}</div>\r\n            </div>\r\n\r\n            <a @click=\"forgotPassword\" class=\"input-errors text-end\" style=\"cursor: pointer;\">Forgot password</a>\r\n            <button @click=\"login\" type=\"button\">Login</button>\r\n\r\n            <router-link to=\"/login-with-phone\">\r\n                <button class=\"button_1\">\r\n                    Login With Phone Number\r\n                </button>\r\n            </router-link>\r\n\r\n            <router-link to=\"/signup\" class=\"link\">\r\n                <h4>Sign Up</h4>\r\n            </router-link>\r\n        </div>\r\n    </section>\r\n</template>\r\n  \r\n<script>\r\nimport { useVuelidate } from '@vuelidate/core'\r\nimport { required, email, helpers } from '@vuelidate/validators'\r\nimport { useAuthStore } from '@/stores/index';\r\nexport default {\r\n    name: 'login',\r\n    setup: () => ({ v$: useVuelidate() }),\r\n    data() {\r\n        return {\r\n            email: '',\r\n            password: '',\r\n        }\r\n    },\r\n    validations() {\r\n        return {\r\n            email: {\r\n                required: helpers.withMessage('* Please type Your Email Address.', required),\r\n                email\r\n            },\r\n            password: {\r\n                required: helpers.withMessage('* Please type Your Password.', required),\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        async login() {\r\n            const isFormCorrect = await this.v$.$validate()\r\n            if (isFormCorrect == true) {\r\n                useAuthStore().signIn(this.email, this.password)\r\n                if (useAuthStore().user) {\r\n                    this.$router.push({ name: 'Home' })\r\n                }\r\n            }\r\n        },\r\n        async forgotPassword() {\r\n            await useAuthStore().resetPassword(this.email)\r\n        }\r\n    },\r\n}\r\n</script>\r\n","import { render } from \"./Login.vue?vue&type=template&id=5138068a\"\nimport script from \"./Login.vue?vue&type=script&lang=js\"\nexport * from \"./Login.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\Surat infotech\\\\OneDrive\\\\Desktop\\\\yash\\\\Vue\\\\Shoping-Cart-Vuejs\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["user","JSON","parse","localStorage","getItem","getAuth","languageCode","useAuthStore","defineStore","state","error","isAuth","getters","isAuthenticated","actions","async","email","password","signInWithEmailAndPassword","this","setItem","stringify","Toast","icon","title","displayName","code","sendPasswordResetEmail","clear","signOut","message","username","createUserWithEmailAndPassword","then","userCredential","CredentialUser","updateProfile","currentUser","providerData","id","class","_createElementVNode","src","_imports_0","alt","for","_createElementBlock","_hoisted_1","_hoisted_2","_createVNode","_component_router_link","to","_hoisted_3","_hoisted_4","_hoisted_5","type","_ctx","$model","placeholder","_Fragment","$errors","index","key","_hoisted_6","$message","_hoisted_7","_hoisted_8","onClick","$options","style","_hoisted_9","_hoisted_10","name","setup","v$","useVuelidate","data","validations","required","helpers","methods","isFormCorrect","$validate","signIn","$router","push","resetPassword","__exports__","render"],"sourceRoot":""}